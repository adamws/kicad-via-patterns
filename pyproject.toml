[build-system]
requires = [
  "hatchling>=1.18",
  "hatch-kicad",
  "hatch-vcs",
]
build-backend = "hatchling.build"

[project]
name = "kicad-via-patterns"
keywords = ["kicad", "via"]
requires-python = ">=3.8"
license = {text = "MIT"}
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Manufacturing",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/adamws/kicad-via-patterns"
"Bug Tracker" = "https://github.com/adamws/kicad-via-patterns/issues"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "via_patterns/_version.py"

[tool.hatch.build.targets.kicad-package]
name = "Via Patterns"
description = "Add vias using various patterns"
description_full = [
  "Add vias using various patterns"
]
identifier = "com.github.adamws.kicad-via-patterns"
author = { name = "adamws", web="https://adamws.github.io" }
status = "development"
kicad_version = "7.0"
sources = ["via_patterns"]
include = [
  "via_patterns/*.py",
  "via_patterns/icon.png",
]
icon = "resources/icon.png"
download_url = "https://adamws.github.io/kicad-via-patterns/{zip_name}"

[tool.hatch.build.targets.kicad-package.hooks.kicad-repository]
enable-by-default = false

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:via_patterns tests}"
style = [
  "ruff check --output-format=concise {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff check --fix --output-format=concise {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
target-version = ["py38"]
line-length = 88

[tool.ruff]
target-version = "py38"
line-length = 88
lint.select = ["ANN", "E", "F", "I", "N", "PL", "W"]
lint.ignore = [
  # Ignore missing type annotations for `self` in method and `cls` in classmethod
  "ANN101", "ANN102",
]

[tool.ruff.lint.per-file-ignores]
"via_patterns/plugin_action.py" = [
  "N802", # Ignore function names not in lowercase
]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
relative_files = true
omit = [
  "via_patterns/_version.py",
]
